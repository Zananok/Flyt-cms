/*
 * Copyright 2009 Kantega AS
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
//<%@ page import="no.kantega.publishing.common.Aksess" %>
//<%
    request.setAttribute("aksess_locale", Aksess.getDefaultAdminLocale());
//%>


var currentUrl = "${currentNavigateContent.url}";

$(document).ready(function(){
    openaksess.common.debug("linkcheck.$(document).ready()");
    openaksess.linkcheck.updateLinkList(currentUrl, "title");
    $("#BrokenLinks th a").live('click', function(event) {
        event.preventDefault();
        var sort = $(this).attr("href");
        openaksess.common.debug("linkcheck.click sort: " + sort);
        openaksess.linkcheck.updateLinkList(currentUrl, "title");
    });
});


/********************************************************************************
 * Namespace for linkcheck
 ********************************************************************************/
openaksess.linkcheck = {

    /**
     * Loads the list of subpages for the given url.
     * @param url
     */
    updateLinkList : function(url, sort) {
        openaksess.common.debug("openaksess.linkcheck.updateLinkList(): Triggering contentupdate event");
        openaksess.content.triggerContentUpdateEvent(url);

        openaksess.common.debug("openaksess.linkcheck.updateLinkList(): Calling ListBrokenLinks.action");
        $("#MainPaneContent").load("${pageContext.request.contextPath}/admin/publish/ListBrokenLinks.action", {itemIdentifier: url, sort:sort}, function(success){
            openaksess.common.debug("openaksess.linkcheck.updateLinkList(): response from ListBrokenLinks.action received");
            $("#MainPaneContent div.fieldset").roundCorners();
        });
    }
};



/********************************************************************************
 * Overridden functions.
 ********************************************************************************/

/**
 * Determines what should happen inside the main pane when an action that requires a reload of this occurs,
 * e.g. a navigator click.
 *
 * Overrides the default implementation. See navigate.jjs
 *
 * @param id - Current item id.
 * @param suppressNavigatorUpdate
 */
openaksess.navigate.updateMainPane = function(id, suppressNavigatorUpdate) {
    openaksess.common.debug("linkcheck.updateMainPane(): id: " + id);
    currentUrl = openaksess.common.getContentUrlFromAssociationId(id);
    openaksess.common.debug("linkcheck.updateMainPane(): currentUrl: " + currentUrl);
    openaksess.linkcheck.updateLinkList(currentUrl, "title");
};


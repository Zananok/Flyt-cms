//<%@ taglib prefix="aksess" uri="http://www.kantega.no/aksess/tags/aksess"%>
/*
 * Copyright 2009 Kantega AS
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/********************************************************************************
 * Common functions
 ********************************************************************************/
$(document).ready(function() {
    debug("common.$(document).ready()");
    dwr.engine.setHeaders({ "X-Requested-With":"XMLHttpRequest"});
});

/**
 * Returns the value of a query string parameter
 *
 * @param paramName Query parameter name
 * @param queryString The total query string
 */
function getQueryParam(paramName, queryString) {
    var val = null;
    var inx = queryString.indexOf(paramName + "=");
    if (inx != -1) {
        val = queryString.substring(inx + paramName.length + 1, queryString.length);
        if (val.indexOf("&") != -1) {
            val = val.substring(0, val.indexOf("&"));
        }
    }
    return val;
}


/**
 * Prints a debug message to Firebug's debug console.
 *
 * @param msg Debug message. Convention: 'functionName(): value'
 */
function debug(msg) {
    var debugEnabled = <aksess:getconfig key="javascript.debug" default="false"/>;
    if (debugEnabled && $.browser.mozilla && typeof console != 'undefined') {
        var now = new Date();
        console.log(now.getHours()+":"+now.getMinutes()+":"+now.getSeconds()+now.getMilliseconds()+ " - " + msg);
    }
}

/**
 * Saves the currently viewed content in the user's session.
 * 
 * @param url - Relative url to the current content.
 */
function notifyContentUpdate(url) {
    ContentStateHandler.notifyContentUpdate(url, function(success){
        if(!success) {
            debug("common.notifyContentUpdate(): dwr ContentStateHandler.notifyContentUpdate() success");
        } else {
            debug("common.notifyContentUpdate(): dwr ContentStateHandler.notifyContentUpdate() failed");
            //TODO: Handle
        }
    });
}

<%@ page import="no.kantega.publishing.common.exception.ExceptionHandler,
                 no.kantega.publishing.common.Aksess"%>
<%--
  ~ Copyright 2009 Kantega AS
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~    http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  --%>

<%
    } catch (Exception e) {
        ExceptionHandler handler = new ExceptionHandler();

        Throwable cause = (Throwable)e;
        if(cause instanceof javax.servlet.jsp.JspException) {
            cause = ((javax.servlet.jsp.JspException)cause).getRootCause();
            if(cause == null) {
                cause = (Throwable)e;
            }
        }
        if(cause instanceof javax.servlet.ServletException) {
            cause = ((javax.servlet.ServletException)cause).getRootCause();
            if(cause == null) {
                cause = (Throwable)e;
            }
        }
        if (cause instanceof org.springframework.web.util.NestedServletException) {
            cause = ((org.springframework.web.util.NestedServletException) cause).getRootCause();
            if (cause == null) {
                cause = (Throwable) e;
            }
        }

        if(cause instanceof java.lang.reflect.InvocationTargetException) {
            cause = ((java.lang.reflect.InvocationTargetException)cause).getTargetException();
            if(cause == null) {
                cause = (Throwable)e;
            }
        }

        e.printStackTrace();

        handler.setThrowable((Exception)cause, request.getRequestURI());
        request.getSession(true).setAttribute("handler", handler);
        request.getRequestDispatcher(Aksess.ERROR_URL).forward(request, response);
    }
%>

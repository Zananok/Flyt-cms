create table associationcategory (
  AssociationId int generated by default as identity not null,
  AssociationName varchar(64),
  Description varchar(10000),
  PublicId varchar(255),
  LastModified timestamp,
  primary key (associationid)
);

create table associations (
  UniqueId int generated by default as identity not null,
  AssociationId int,
  ContentId int not null,
  ParentAssociationId int not null,
  Category int not null,
  SiteId int not null default 1,
  SecurityId int,
  Type int not null default 0,
  Priority int not null,
  Path varchar(255),
  Depth int not null,
  IsDeleted int not null default 0,
  DeletedItemsId int,
  NumberOfViews int,
  primary key (uniqueid)
);


create table attachments (
  Id int generated by default as identity not null,
  ContentId int not null,
  Language int not null,
  Filename varchar(255) not null,
  Data varchar(255),
  LastModified timestamp not null,
  FileSize int not null default 0,
  primary key (id)
);


create table attribute_editablelist (
  AttributeKey varchar(255) not null,
  Value varchar(255) not null,
  DefaultSelected int not null,
  Language varchar(255) not null
);

create table content (
  ContentId int generated by default as identity not null,
  Type int not null,
  ContentTemplateId int,
  MetaDataTemplateId int,
  DisplayTemplateId int,
  DocumentTypeId int,
  GroupId int not null,
  Owner varchar(128),
  Location varchar(255),
  Alias varchar(64),
  PublishDate timestamp,
  ExpireDate timestamp,
  ExpireAction int,
  VisibilityStatus int not null,
  NumberOfNotes int not null default 0,
  OwnerPerson varchar(128),
  RevisionDate timestamp,
  ForumId int,
  OpenInNewWindow int,
  DocumentTypeIdForChildren int,
  IsLocked int not null default 0,
  RatingScore float not null default 0,
  NumberOfRatings int not null default 0,
  IsSearchable int,
  NumberOfComments int,
  primary key (contentid)
);



create table contentattributes (
  AttributeId int generated by default as identity not null,
  ContentVersionId int not null,
  AttributeType varchar(32) not null,
  DataType int not null,
  Name varchar(64) not null,
  Value varchar(10000),
  primary key (attributeid)
);


create table contenttemplates (
  ContentTemplateId int generated by default as identity not null,
  Name varchar(64) not null,
  TemplateType int not null,
  ContentType int not null,
  DefaultDocumentTypeId int not null,
  URL varchar(255) not null,
  ExpireMonths int not null,
  ExpireAction int not null,
  HearingEnabled int not null,
  KeepVersions int not null,
  DefaultDocTypeIdForChildren int not null default 0,
  DefaultAssociationCategoryId int not null default 0,
  PublicId varchar(255),
  LastModified timestamp,
  primary key (contenttemplateid)
);

create table contentversion (
  ContentVersionId int generated by default as identity not null,
  ContentId int not null,
  Version int not null,
  Status int not null,
  IsActive int,
  Language int not null,
  Title varchar(255) not null,
  AltTitle varchar(255),
  Description varchar(10000),
  Image varchar(255),
  Keywords varchar(10000),
  Publisher varchar(64),
  LastModified timestamp,
  LastModifiedBy varchar(64),
  ChangeDescription varchar(10000),
  ApprovedBy varchar(64),
  ChangeFrom timestamp,
  IsMinorChange int,
  LastMajorChange timestamp,
  LastMajorChangeBy varchar(64),
  primary key (contentversionid)
);


create table ct2association (
  TemplateId int not null,
  AssociationId int not null,
  primary key (templateid, associationid)
);

create table ct2parent (
  TemplateId int not null,
  ParentId int not null,
  primary key (templateid, parentid)
);

create table ct2topic (
  ContentId int not null,
  TopicMapId int not null,
  TopicId varchar(255) not null
);


create table dbuserattributes (
  Domain varchar(64) not null,
  UserId varchar(64) not null,
  Name varchar(255),
  Value varchar(255)
);

create table dbuserpassword (
  Domain varchar(64) not null,
  UserId varchar(64) not null,
  Password varchar(255) not null
);

create table dbuserpasswordresettoken (
  Domain varchar(255),
  UserId varchar(255),
  Token varchar(255),
  ExpireDate timestamp
);

create table dbuserprofile (
  Domain varchar(64) not null,
  UserId varchar(64) not null,
  GivenName varchar(255),
  Surname varchar(255),
  Email varchar(255),
  Department varchar(255)
);

create table dbuserrole (
  Domain varchar(64) not null,
  RoleId varchar(255) not null,
  RoleName varchar(255) not null
);

create table dbuserrole2user (
  RoleDomain varchar(64) not null,
  RoleId varchar(255) not null,
  UserDomain varchar(64) not null,
  UserId varchar(255) not null
);

create table deleteditems (
  Id int generated by default as identity not null,
  Title varchar(255) not null,
  ObjectType int not null,
  DeletedDate timestamp not null,
  DeletedBy varchar(255) not null,
  primary key (id)
);

create table displaytemplatecontroller (
  displaytemplatecontrollerid int generated by default as identity not null,
  displaytemplateid int not null,
  controllername varchar(255) not null,
  primary key (displaytemplatecontrollerid)
);

create table displaytemplates (
  DisplayTemplateId int generated by default as identity not null,
  Site int not null default 1,
  ContentTemplateId int not null,
  MetadataTemplateId int not null,
  Name varchar(64),
  Description varchar(10000),
  Image varchar(255),
  URLFullView varchar(255) not null,
  URLMiniView varchar(255),
  AllowMultipleUsages int not null,
  IsNewGroup int not null,
  DefaultForumId int,
  PublicId varchar(255),
  LastModified timestamp,
  primary key (displaytemplateid)
);

create table documenttype (
  Id int not null,
  Name varchar(255) not null,
  primary key (id)
);

create table eventlog (
  Time timestamp not null,
  UserId varchar(32),
  EventName varchar(255) not null,
  SubjectName varchar(255),
  RemoteAddress varchar(32),
  SubjectType int,
  SubjectId int
);

create table form (
  id int generated by default as identity not null,
  name varchar(128) not null,
  wizard varchar(255),
  xslfo varchar(255),
  email varchar(50) not null,
  importsource varchar(255),
  importid varchar(255),
  importversion varchar(255),
  importdirty smallint,
  approvable smallint,
  authenticationContext varchar(255),
  signatureStrategy varchar(255),
  deliveryService varchar(255),
  wsDeliveryTemplate varchar(255),
  version int not null default 1,
  allowAttachments int,
  primary key (id)
);

create table formdelegation (
  Id int generated by default as identity not null,
  Delegator varchar(255) not null,
  Delegee varchar(255) not null,
  primary key (id)
);

create table formfilled (
  id int generated by default as identity not null,
  ref varchar(100) not null,
  formid int not null,
  resultxml varchar(255) not null,
  status int not null,
  filluser varchar(255),
  approver varchar(255),
  filldate timestamp,
  approvedate timestamp,
  delegee varchar(255),
  realapprover varchar(255),
  authenticatedId varchar(255),
  primary key (id)
);

create table formfilledfile (
  id int generated by default as identity not null,
  formfilledid int not null,
  filedata varchar(255) not null,
  mimetype varchar(128),
  filename varchar(128),
  primary key (id)
);

create table formpdfimage (
  id int generated by default as identity not null,
  formid int not null,
  filedata varchar(255) not null,
  filename varchar(300) not null,
  mimetype varchar(128),
  primary key (id)
);

create table formsubmission (
  FormSubmissionId int generated by default as identity not null,
  FormId int not null,
  SubmittedBy varchar(255),
  Authenticatedidentity varchar(255),
  Password varchar(255),
  Email varchar(255),
  SubmittedDate timestamp not null,
  primary key (formsubmissionid)
);

create table formsubmissionvalues (
  FormSubmissionId int not null,
  FieldNumber int not null,
  FieldName varchar(255) not null,
  FieldValue varchar(10000)
);

create table formversion (
  id int generated by default as identity not null,
  formid int not null,
  wizard varchar(300) not null,
  filename varchar(300) not null,
  importversion varchar(128),
  primary key (id)
);

create table forum_attachment (
  attachmentId int not null,
  postId int,
  fileName varchar(255),
  fileSize int,
  mimeType varchar(255),
  data varchar(255),
  primary key (attachmentid)
);

create table forum_forum (
  forumId int not null,
  forumCategoryId int,
  name varchar(255),
  description varchar(255),
  numThreads int,
  createdDate timestamp,
  owner varchar(255),
  attachmentsAllowed char(1),
  approvalRequired char(1),
  anonymousPostAllowed char(1),
  moderator varchar(255),
  notifyAllNewPosts char(1),
  topicMapId int,
  primary key (forumid)
);

create table forum_forum_groups (
  forumId int not null,
  groupId varchar(255)
);

create table forum_forumcategory (
  forumCategoryId int not null,
  name varchar(255),
  description varchar(255),
  numForums int,
  createdDate timestamp,
  owner varchar(255),
  primary key (forumcategoryid)
);

create table forum_post (
  postId int not null,
  threadId int,
  replyToId int,
  author varchar(255),
  subject varchar(255),
  body varchar(10000),
  postDate timestamp,
  owner varchar(255),
  approved char(1),
  ratingScore float,
  numberOfRatings int,
  primary key (postid)
);

create table forum_thread (
  threadId int not null,
  name varchar(255),
  description varchar(255),
  forumId int,
  createdDate timestamp,
  numPosts int,
  owner varchar(255),
  contentId int,
  approved char(1),
  primary key (threadid)
);

create table forum_thread_topics (
  threadId int not null,
  topicId varchar(255)
);

create table link (
  Id int generated by default as identity not null,
  Url varchar(2048) not null,
  LastChecked timestamp,
  Status int,
  HttpStatus int,
  FirstFound timestamp,
  TimesChecked int,
  primary key (id)
);

create table linkoccurrence (
  Id int generated by default as identity not null,
  ContentId int not null,
  AttributeName varchar(255),
  LastChecked timestamp,
  LinkId int,
  primary key (id)
);

create table mailsubscription (
  Id int generated by default as identity not null,
  Channel int not null,
  DocumentType int not null,
  Language int not null,
  Email varchar(255) not null,
  MailInterval varchar(255) not null,
  primary key (id)
);

create table multimedia (
  Id int generated by default as identity not null,
  ParentId int not null,
  SecurityId int,
  Type int,
  Name varchar(255) not null,
  Author varchar(255),
  Description varchar(10000),
  Filename varchar(255),
  Mediasize int,
  Width int,
  Height int,
  Data varchar(255),
  LastModified timestamp,
  LastModifiedBy varchar(64),
  AltName varchar(255),
  UsageInfo varchar(10000),
  ProfileImageUserId varchar(255),
  NoFiles int,
  NoSubFolders int,
  OriginalDate timestamp,
  CameraMake varchar(255),
  CameraModel varchar(255),
  GPSLatitudeRef varchar(1),
  GPSLatitude varchar(32),
  GPSLongitudeRef varchar(1),
  GPSLongitude varchar(32),
  HasImageMap int,
  primary key (id)
);


create table multimediaexifdata (
  Id int generated by default as identity not null,
  MultimediaId int not null,
  Directory varchar(255) not null,
  ValueKey varchar(255) not null,
  Value varchar(10000),
  primary key (id)
);


create table multimediaimagemap (
  Id int generated by default as identity not null,
  MultimediaId int not null,
  Coords varchar(25) not null,
  URL varchar(255),
  AltName varchar(255),
  NewWindow int not null,
  primary key (id)
);

create table multimediausage (
  ContentId int not null,
  MultimediaId int not null
);

create table notes (
  NoteId int generated by default as identity not null,
  Author varchar(255) not null,
  Notetext varchar(10000),
  CreatedDate timestamp not null,
  ContentId int not null,
  primary key (noteid)
);

create table oa_db_migrations (
  dbnamespace varchar(256),
  version varchar(255)
);

create table objectpermissions (
  ObjectSecurityId int not null,
  ObjectType int not null,
  Privilege int not null,
  RoleType varchar(32) not null,
  Role varchar(128) not null,
  NotificationPriority int not null default 0
);

create table poll (
  Id int generated by default as identity not null,
  Alternative varchar(255) not null,
  Votes int not null,
  ContentId int not null,
  primary key (id)
);

create table ratings (
  userId varchar(255),
  objectId varchar(255) not null,
  context varchar(255) not null,
  rating int not null,
  ratingDate timestamp not null
);

create table role2topic (
  TopicMapId int not null,
  TopicId varchar(64) not null,
  RoleType varchar(32) not null,
  Role varchar(128) not null
);

create table schedulelog (
  Service varchar(64) not null,
  LastRun timestamp not null
);

create table searchlog (
  Id int generated by default as identity not null,
  Time timestamp not null,
  Query varchar(255) not null,
  ExactQuery varchar(255) not null,
  SiteId int not null,
  NumberOfHits int not null,
  primary key (id)
);

create table site2hostname (
  SiteId int not null,
  Hostname varchar(255) not null,
  IsDefault int not null
);

create table sites (
  SiteId int generated by default as identity not null,
  Name varchar(32),
  Alias varchar(32),
  primary key (siteid)
);

create table survey (
  id int generated by default as identity not null,
  name varchar(128) not null,
  wizard varchar(128),
  type int,
  primary key (id)
);

create table survey_participant (
  id int generated by default as identity not null,
  name varchar(128) not null,
  email varchar(128) not null,
  surveyid int not null,
  status int not null,
  secret decimal(19, 0) not null,
  primary key (id)
);

create table survey_result (
  id int generated by default as identity not null,
  survey int not null,
  resultxml varchar(128),
  primary key (id)
);

create table tmassociation (
  TopicMapId int not null,
  InstanceOf varchar(255) not null,
  Rolespec varchar(255) not null,
  TopicRef varchar(255) not null,
  AssociatedTopicRef varchar(255) not null
);



create table tmbasename (
  TopicId varchar(255) not null,
  TopicMapId int not null,
  Scope varchar(255),
  Basename varchar(255) not null
);


create table tmmaps (
  Id int generated by default as identity not null,
  Name varchar(64) not null,
  IsEditable int,
  WSOperation varchar(64),
  WSSoapAction varchar(255),
  WSEndPoint varchar(255),
  primary key (id)
);

create table tmoccurence (
  TopicId varchar(255) not null,
  TopicMapId int not null,
  InstanceOf varchar(255) not null,
  ResourceData varchar(10000) not null
);


create table tmtopic (
  TopicId varchar(255) not null,
  TopicMapId int not null,
  InstanceOf varchar(255),
  IsTopicType int not null,
  IsAssociation int not null,
  LastUpdated timestamp not null,
  Subjectidentity varchar(255),
  IsSelectable int not null default 0
);

create table trafficlog (
  Time timestamp not null,
  ContentId int not null,
  Language int not null,
  RemoteAddress varchar(32),
  Referer varchar(255),
  SessionId varchar(128),
  SiteId int,
  RefererHost varchar(255),
  RefererQuery varchar(255),
  IsSpider int not null default 0,
  UserAgent varchar(255)
);


create table transactionlocks (
  TransactionId varchar(64) not null,
  TransactionTime timestamp not null,
  primary key (transactionid)
);

create table uno_yrker (
  nid int not null,
  title varchar(1024),
  link varchar(1024),
  ingress varchar(4096),
  beskrivelse varchar(4096),
  interesse varchar(1024),
  code_isco varchar(1024),
  type varchar(255),
  updated varchar(255),
  primary key (nid)
);

create table urlstatus (
  id int not null,
  contentid int,
  url varchar(10000),
  lastchecked timestamp,
  numchecked int,
  primary key (id)
);

create table xmlcache (
  Id varchar(64) not null,
  Data varchar(10000) not null,
  LastUpdated timestamp not null,
  primary key (id)
);

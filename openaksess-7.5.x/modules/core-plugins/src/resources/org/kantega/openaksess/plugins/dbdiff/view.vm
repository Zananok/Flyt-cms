#macro(printNull $value)
    #if(!$value)
        null
    #else
        $value
    #end
#end

#macro(explainAddedColumn $change)
    #pluginArgMessage('dbdiff.changes.columnadded', [$change.newColumn.name])
#end

#macro(explainRemovedColumn $shema, $change)
    #pluginArgMessage('dbdiff.changes.columnremoved', [$change.findChangedColumn($schema.actual, false).name])
#end

#macro(explainColumnChange $schema $change)
#set($origColumn = $change.findChangedColumn($schema.actual, false))
    #pluginArgMessage('dbdiff.changes.columnchanged', [$change.changedColumn])
<ul>

    #if($change.isTypeChanged($schema.platform.platformInfo, $origColumn, $change.newColumn))
        <li>#pluginArgMessage('dbdiff.changes.columnchanged.type', [$origColumn.type, $change.newColumn.type])</li>
    #end
    #if($change.isSizeChanged($schema.platform.platformInfo, $origColumn, $change.newColumn))
        <li>#pluginArgMessage('dbdiff.changes.columnchanged.size', [$origColumn.size, $change.newColumn.size])</li>
    #end
    #if($change.isDefaultValueChanged($origColumn, $change.newColumn))

        #set($origDefault = $origColumn.defaultValue)
        #if(!$origDefault)
            #set($origDefault = "null")
        #end
        #set($newDefault = $change.newColumn.defaultValue)
        #if(!$newDefault)
            #set($newDefault = "null")
        #end

        <li>#pluginArgMessage('dbdiff.changes.columnchanged.default', [$origDefault, $newDefault])</li>
    #end
    #if($change.isRequiredStatusChanged($origColumn, $change.newColumn))
        <li>
            #if($origColumn.required)
                #pluginMessage('dbdiff.changes.columnchanged.notrequired')
            #else
                #pluginMessage('dbdiff.changes.columnchanged.required')
            #end
        </li>
    #end
    #if($change.isAutoIncrementChanged($origColumn, $change.newColumn))
        <li>#pluginArgMessage('dbdiff.changes.columnchanged.autoincrement', [$origColumn.autoIncrement, $change.newColumn.autoIncrement])</li>
    #end
</ul>
#end

#macro(explainRecretionChange $schema $change)
    #if(!$dbDiffTool.canMigrateData($change))
        #pluginMessage("dbdiff.changes.recreate.dataloss")
    #end
    #pluginMessage("dbdiff.changes.recreate.reasons")

<ul>
    #foreach($origChange in $change.originalChanges)
        <li>#explainChange($schema, $origChange)</li>
    #end
</ul>

#end
#macro(explainChange $schema $change)
    #if($change.class.simpleName == "RecreateTableChange")
        #explainRecretionChange($schema, $change)
    #elseif ($change.class.simpleName == "ColumnDefinitionChange")
        #explainColumnChange($schema, $change)
    #elseif ($change.class.simpleName == "AddColumnChange")
        #explainAddedColumn($change)
    #elseif ($change.class.simpleName == "RemoveColumnChange")
        #explainRemovedColumn($schema, $change)
    #elseif ($change.class.simpleName == "AddTableChange")
        #pluginArgMessage("dbdiff.changes.addtable", [$change.newTable.name])
    #elseif ($change.class.simpleName == "AddForeignKeyChange")
        #pluginArgMessage("dbdiff.changes.addforeignkey", [${change.newForeignKey.foreignTable.name}])
        (
        #foreach($ref in $change.newForeignKey.references)
            <code>$ref.localColumn.name -> <code>$ref.foreignColumn.name</code>
            #if( $velocityHasNext ),#end
        #end)
    #elseif ($change.class.simpleName == "RemoveForeignKeyChange")
        #pluginMessage("dbdiff.changes.removeforeignkey")
    #elseif ($change.class.simpleName == "AddIndexChange")
        #pluginArgMessage("dbdiff.changes.addindex", [$change.newIndex.name])
    #elseif ($change.class.simpleName == "RemoveIndexChange")
        #pluginArgMessage("dbdiff.changes.removeindex", [$change.findChangedIndex($schema.actual, false).name])
    #elseif ($change.class.simpleName == "ColumnOrderChange")
        #pluginMessage("dbdiff.changes.orderdiffers")
    #else
        $change.class.simpleName #pluginMessage("dbdiff.changes.unknown")
    #end
#end

#setTitle('dbdiff.title')
#section("content")

#box()
<h1>#pluginMessage("dbdiff.summary")</h1>
<table>
    <tr>
        <th>#pluginMessage("dbdiff.schema.name")</th>
        <th>#pluginMessage("dbdiff.schema.status")</th>
    </tr>
    #foreach($schema in $schemas)
        <tr>
            <td>
                <a href="#db$schema.wanted.name">$schema.wanted.name</a>
            </td>
            <td>
                #if($schema.changes.isEmpty())
                    #pluginMessage("dbdiff.schema.uptodate")
                #else
                    #pluginArgMessage("dbdiff.schema.numberofchanges", [$schema.changes.size()]) 
                #end
            </td>
        </tr>
    #end

</table>

<h2>#pluginMessage("dbdiff.unknown.title")</h2>
#if($unknownTables.isEmpty())
    #pluginMessage("dbdiff.unknown.nounknown")
#else
    #pluginArgMessage("dbdiff.unknown.numberofunknown", [$unknownTables.size()])
    <ul>
        #foreach($tableName in $unknownTables)
            <li>$tableName</li>
        #end
    </ul>
    <p>#pluginMessage("dbdiff.unknown.ddlmodel")</p>
    <p><textarea style="width:100%;height:30px">$unknownModel</textarea></p>
    <p>#pluginMessage("dbdiff.unknown.deletesql")</p>
    <textarea style="width:100%;height:30px">$unknownTablesDeleteSql</textarea>
#end


#end
#foreach($schema in $schemas)
#box()
    <a name="db$schema.wanted.name"
    <h1>$schema.wanted.name - <code>$schema.resourcePath</code></h1>

    #if($schema.changes.isEmpty())
    <p>#pluginMessage("dbdiff.details.uptodate")</p>
    #else
    <h3>#pluginMessage("dbdiff.details.allsql"):</h3>
        #if(!$dbDiffTool.canMigrateData($schema.changes))
            #pluginMessage("dbdiff.details.dataloss")
        #end
        #if($schema.exception)
            <p>
                #pluginArgMessage("dbdiff.details.exception", $schema.exception.message)
            </p>
        #else
            <textarea style="width:100%;height: 80px">${schema.sql}</textarea>
        #end
    <h3>#pluginMessage("dbdiff.details.label")</h3>

    <table width="100%" style="table-layout:fixed;">
        <tr>
            <th width="30%">#pluginMessage("dbdiff.details.table.table")</th>
            <th width="40%">#pluginMessage("dbdiff.details.table.change")</th>
            <th width="30%">#pluginMessage("dbdiff.details.table.sql")</th>
        </tr>
        #foreach($change in $schema.changes)
            <tr>
                <td valign="top" width="30%" style="word-wrap:break-word;" >
                    <code>#if($change.changedTable)$change.changedTable#else$change.newTable.name#end</code>
                </td>

                <td valign="top" style="word-wrap:break-word;" width="40%">
                    #explainChange($schema, $change)
                </td>
                <th valign="top" width="30%" style="word-wrap:break-word;" >
                    <textarea style="width:100%;height: 200px">$dbDiffTool.getAlterString($schema.actual, $change, $schema.platform)</textarea>
                </th>

            </tr>
        #end
    </table>
    #end
    #end
#end
#end


#applyAdminLayout()